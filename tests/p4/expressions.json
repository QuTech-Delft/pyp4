{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 1, false],
        ["tmp_0", 8, false],
        ["userMetadata.flag1", 1, false],
        ["_padding_0", 6, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "expr_t",
      "id" : 2,
      "fields" : [
        ["in32a", 32, false],
        ["in32b", 32, false],
        ["in8", 8, false],
        ["in1", 1, false],
        ["out32", 32, false],
        ["out1", 1, false],
        ["op", 8, false],
        ["padding", 6, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "expr",
      "id" : 2,
      "header_type" : "expr_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "expr"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "expressions.p4",
        "line" : 404,
        "column" : 8,
        "source_fragment" : "MyDeparser"
      },
      "order" : ["expr"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [
    {
      "name" : "MyIngress.reg",
      "id" : 0,
      "source_info" : {
        "filename" : "expressions.p4",
        "line" : 276,
        "column" : 25,
        "source_fragment" : "reg"
      },
      "size" : 1,
      "bitwidth" : 32
    }
  ],
  "calculations" : [],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "MyIngress.act_drop",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 65,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_add",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 69,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out32"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["expr", "in32a"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["expr", "in32b"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 70,
            "column" : 8,
            "source_fragment" : "hdr.expr.out32 = hdr.expr.in32a + hdr.expr.in32b"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_subtract",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 74,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out32"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "-",
                      "left" : {
                        "type" : "field",
                        "value" : ["expr", "in32a"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["expr", "in32b"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 75,
            "column" : 8,
            "source_fragment" : "hdr.expr.out32 = hdr.expr.in32a - hdr.expr.in32b"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_multiply",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 79,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out32"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "*",
                      "left" : {
                        "type" : "field",
                        "value" : ["expr", "in32a"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["expr", "in32b"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 80,
            "column" : 8,
            "source_fragment" : "hdr.expr.out32 = hdr.expr.in32a * hdr.expr.in32b"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_left_shift",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 84,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out32"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "<<",
                      "left" : {
                        "type" : "field",
                        "value" : ["expr", "in32a"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["expr", "in8"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 85,
            "column" : 8,
            "source_fragment" : "hdr.expr.out32 = hdr.expr.in32a << hdr.expr.in8"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_right_shift",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 89,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out32"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : ">>",
                      "left" : {
                        "type" : "field",
                        "value" : ["expr", "in32a"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["expr", "in8"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 90,
            "column" : 8,
            "source_fragment" : "hdr.expr.out32 = hdr.expr.in32a >> hdr.expr.in8"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_is_equal",
      "id" : 6,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 94,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["expr", "in32a"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["expr", "in32b"]
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "MyIngress.act_is_not_equal",
      "id" : 7,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 102,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "!=",
                      "left" : {
                        "type" : "field",
                        "value" : ["expr", "in32a"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["expr", "in32b"]
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "MyIngress.act_is_greater_than",
      "id" : 8,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 110,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : ">",
                      "left" : {
                        "type" : "field",
                        "value" : ["expr", "in32a"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["expr", "in32b"]
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "MyIngress.act_is_greater_than_or_equal",
      "id" : 9,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 118,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : ">=",
                      "left" : {
                        "type" : "field",
                        "value" : ["expr", "in32a"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["expr", "in32b"]
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "MyIngress.act_is_less_than",
      "id" : 10,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 126,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "<",
                      "left" : {
                        "type" : "field",
                        "value" : ["expr", "in32a"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["expr", "in32b"]
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "MyIngress.act_is_less_than_or_equal",
      "id" : 11,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 134,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "<=",
                      "left" : {
                        "type" : "field",
                        "value" : ["expr", "in32a"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["expr", "in32b"]
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "MyIngress.act_logical_and",
      "id" : 12,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 142,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["expr", "in32a"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x0000000a"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["expr", "in32b"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x0000000a"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "MyIngress.act_logical_or",
      "id" : 13,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 150,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "or",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["expr", "in32a"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x0000000a"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["expr", "in32b"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x0000000a"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "MyIngress.act_logical_not",
      "id" : 14,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 158,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["expr", "in32a"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x0000000a"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["expr", "in32a"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x0000000a"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "MyIngress.act_bitwise_and",
      "id" : 15,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 167,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out32"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["expr", "in32a"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["expr", "in32b"]
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 168,
            "column" : 8,
            "source_fragment" : "hdr.expr.out32 = hdr.expr.in32a & hdr.expr.in32b"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_bitwise_or",
      "id" : 16,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 172,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out32"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "|",
                  "left" : {
                    "type" : "field",
                    "value" : ["expr", "in32a"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["expr", "in32b"]
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 173,
            "column" : 8,
            "source_fragment" : "hdr.expr.out32 = hdr.expr.in32a | hdr.expr.in32b"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_bitwise_xor",
      "id" : 17,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 177,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out32"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "^",
                  "left" : {
                    "type" : "field",
                    "value" : ["expr", "in32a"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["expr", "in32b"]
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 178,
            "column" : 8,
            "source_fragment" : "hdr.expr.out32 = hdr.expr.in32a ^ hdr.expr.in32b"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_bitwise_not",
      "id" : 18,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 182,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out32"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "~",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["expr", "in32a"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 183,
            "column" : 8,
            "source_fragment" : "hdr.expr.out32 = ~hdr.expr.in32a"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_is_valid",
      "id" : 19,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 187,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_is_valid_union",
      "id" : 20,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 192,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_data_to_bool",
      "id" : 21,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 197,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["expr", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "MyIngress.act_bool_to_data",
      "id" : 22,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 206,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flag1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["expr", "in1"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x01"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 209,
            "column" : 1,
            "source_fragment" : "meta.flag1 = (hdr.expr.in1 == 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["expr", "in1"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x01"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 210,
            "column" : 8,
            "source_fragment" : "hdr.expr.out1 = (bit<1>)(meta.flag1)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_bool",
      "id" : 23,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 214,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["expr", "out1"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "or",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["expr", "in1"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x01"
                          }
                        }
                      },
                      "right" : {
                        "type" : "bool",
                        "value" : true
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "MyIngress.act_two_comp_mod",
      "id" : 24,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 221,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_sat_cast",
      "id" : 25,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 226,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_usat_cast",
      "id" : 26,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 231,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_ternary",
      "id" : 27,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 236,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_deref_header_stack",
      "id" : 28,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 241,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_last_stack_index",
      "id" : 29,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 246,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_size_stack",
      "id" : 30,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 251,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_access_field",
      "id" : 31,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 256,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_dereference_union_stack",
      "id" : 32,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 261,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_access_union_header",
      "id" : 33,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 266,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_runtime_data",
      "id" : 34,
      "runtime_data" : [
        {
          "name" : "runtime_data",
          "bitwidth" : 32
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 271,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out32"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 272,
            "column" : 8,
            "source_fragment" : "hdr.expr.out32 = runtime_data"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_value",
      "id" : 35,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 279,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.reg"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "hexstr",
              "value" : "0x000000be"
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 280,
            "column" : 8,
            "source_fragment" : "reg.write((bit<32>)0, 0xbe)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["expr", "out32"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.reg"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 281,
            "column" : 8,
            "source_fragment" : "reg.read(hdr.expr.out32, (bit<32>)0)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.act_log_msg",
      "id" : 36,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "field",
              "value" : ["expr", "in1"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 285,
            "column" : 50,
            "source_fragment" : "        log_msg(\\\"Hello, world! in1={}; in8={};\\\", {hdr.expr.in1, hdr.expr.in8});"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "field",
              "value" : ["expr", "in8"]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 285,
            "column" : 64,
            "source_fragment" : "        log_msg(\\\"Hello, world! in1={}; in8={};\\\", {hdr.expr.in1, hdr.expr.in8});"
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Hello, world! in1={}; in8={};"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp"]
                },
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_0"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 285,
            "column" : 8,
            "source_fragment" : "        log_msg(\\\"Hello, world! in1={}; in8={};\\\", {hdr.expr.in1, hdr.expr.in8});"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "expressions.p4",
        "line" : 59,
        "column" : 8,
        "source_fragment" : "MyIngress"
      },
      "init_table" : "node_2",
      "tables" : [
        {
          "name" : "MyIngress.operations",
          "id" : 0,
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 288,
            "column" : 10,
            "source_fragment" : "operations"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.expr.op",
              "target" : ["expr", "op"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 37,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36],
          "actions" : ["MyIngress.act_drop", "MyIngress.act_add", "MyIngress.act_subtract", "MyIngress.act_multiply", "MyIngress.act_left_shift", "MyIngress.act_right_shift", "MyIngress.act_is_equal", "MyIngress.act_is_not_equal", "MyIngress.act_is_greater_than", "MyIngress.act_is_greater_than_or_equal", "MyIngress.act_is_less_than", "MyIngress.act_is_less_than_or_equal", "MyIngress.act_logical_and", "MyIngress.act_logical_or", "MyIngress.act_logical_not", "MyIngress.act_bitwise_and", "MyIngress.act_bitwise_or", "MyIngress.act_bitwise_xor", "MyIngress.act_bitwise_not", "MyIngress.act_is_valid", "MyIngress.act_is_valid_union", "MyIngress.act_data_to_bool", "MyIngress.act_bool_to_data", "MyIngress.act_bool", "MyIngress.act_two_comp_mod", "MyIngress.act_sat_cast", "MyIngress.act_usat_cast", "MyIngress.act_ternary", "MyIngress.act_deref_header_stack", "MyIngress.act_last_stack_index", "MyIngress.act_size_stack", "MyIngress.act_access_field", "MyIngress.act_dereference_union_stack", "MyIngress.act_access_union_header", "MyIngress.act_runtime_data", "MyIngress.act_value", "MyIngress.act_log_msg"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.act_drop" : null,
            "MyIngress.act_add" : null,
            "MyIngress.act_subtract" : null,
            "MyIngress.act_multiply" : null,
            "MyIngress.act_left_shift" : null,
            "MyIngress.act_right_shift" : null,
            "MyIngress.act_is_equal" : null,
            "MyIngress.act_is_not_equal" : null,
            "MyIngress.act_is_greater_than" : null,
            "MyIngress.act_is_greater_than_or_equal" : null,
            "MyIngress.act_is_less_than" : null,
            "MyIngress.act_is_less_than_or_equal" : null,
            "MyIngress.act_logical_and" : null,
            "MyIngress.act_logical_or" : null,
            "MyIngress.act_logical_not" : null,
            "MyIngress.act_bitwise_and" : null,
            "MyIngress.act_bitwise_or" : null,
            "MyIngress.act_bitwise_xor" : null,
            "MyIngress.act_bitwise_not" : null,
            "MyIngress.act_is_valid" : null,
            "MyIngress.act_is_valid_union" : null,
            "MyIngress.act_data_to_bool" : null,
            "MyIngress.act_bool_to_data" : null,
            "MyIngress.act_bool" : null,
            "MyIngress.act_two_comp_mod" : null,
            "MyIngress.act_sat_cast" : null,
            "MyIngress.act_usat_cast" : null,
            "MyIngress.act_ternary" : null,
            "MyIngress.act_deref_header_stack" : null,
            "MyIngress.act_last_stack_index" : null,
            "MyIngress.act_size_stack" : null,
            "MyIngress.act_access_field" : null,
            "MyIngress.act_dereference_union_stack" : null,
            "MyIngress.act_access_union_header" : null,
            "MyIngress.act_runtime_data" : null,
            "MyIngress.act_value" : null,
            "MyIngress.act_log_msg" : null
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          },
          "entries" : [
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 333,
                "column" : 12,
                "source_fragment" : "0: act_drop()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x00"
                }
              ],
              "action_entry" : {
                "action_id" : 0,
                "action_data" : []
              },
              "priority" : 1
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 334,
                "column" : 12,
                "source_fragment" : "1: act_add()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x01"
                }
              ],
              "action_entry" : {
                "action_id" : 1,
                "action_data" : []
              },
              "priority" : 2
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 335,
                "column" : 12,
                "source_fragment" : "2: act_subtract()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x02"
                }
              ],
              "action_entry" : {
                "action_id" : 2,
                "action_data" : []
              },
              "priority" : 3
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 336,
                "column" : 12,
                "source_fragment" : "3: act_multiply()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x03"
                }
              ],
              "action_entry" : {
                "action_id" : 3,
                "action_data" : []
              },
              "priority" : 4
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 337,
                "column" : 12,
                "source_fragment" : "4: act_left_shift()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x04"
                }
              ],
              "action_entry" : {
                "action_id" : 4,
                "action_data" : []
              },
              "priority" : 5
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 338,
                "column" : 12,
                "source_fragment" : "5: act_right_shift()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x05"
                }
              ],
              "action_entry" : {
                "action_id" : 5,
                "action_data" : []
              },
              "priority" : 6
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 339,
                "column" : 12,
                "source_fragment" : "6: act_is_equal()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x06"
                }
              ],
              "action_entry" : {
                "action_id" : 6,
                "action_data" : []
              },
              "priority" : 7
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 340,
                "column" : 12,
                "source_fragment" : "7: act_is_not_equal()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x07"
                }
              ],
              "action_entry" : {
                "action_id" : 7,
                "action_data" : []
              },
              "priority" : 8
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 341,
                "column" : 12,
                "source_fragment" : "8: act_is_greater_than()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x08"
                }
              ],
              "action_entry" : {
                "action_id" : 8,
                "action_data" : []
              },
              "priority" : 9
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 342,
                "column" : 12,
                "source_fragment" : "9: act_is_greater_than_or_equal()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x09"
                }
              ],
              "action_entry" : {
                "action_id" : 9,
                "action_data" : []
              },
              "priority" : 10
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 343,
                "column" : 12,
                "source_fragment" : "10: act_is_less_than()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x0a"
                }
              ],
              "action_entry" : {
                "action_id" : 10,
                "action_data" : []
              },
              "priority" : 11
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 344,
                "column" : 12,
                "source_fragment" : "11: act_is_less_than_or_equal()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x0b"
                }
              ],
              "action_entry" : {
                "action_id" : 11,
                "action_data" : []
              },
              "priority" : 12
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 345,
                "column" : 12,
                "source_fragment" : "12: act_logical_and()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x0c"
                }
              ],
              "action_entry" : {
                "action_id" : 12,
                "action_data" : []
              },
              "priority" : 13
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 346,
                "column" : 12,
                "source_fragment" : "13: act_logical_or()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x0d"
                }
              ],
              "action_entry" : {
                "action_id" : 13,
                "action_data" : []
              },
              "priority" : 14
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 347,
                "column" : 12,
                "source_fragment" : "14: act_logical_not()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x0e"
                }
              ],
              "action_entry" : {
                "action_id" : 14,
                "action_data" : []
              },
              "priority" : 15
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 348,
                "column" : 12,
                "source_fragment" : "15: act_bitwise_and()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x0f"
                }
              ],
              "action_entry" : {
                "action_id" : 15,
                "action_data" : []
              },
              "priority" : 16
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 349,
                "column" : 12,
                "source_fragment" : "16: act_bitwise_or()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x10"
                }
              ],
              "action_entry" : {
                "action_id" : 16,
                "action_data" : []
              },
              "priority" : 17
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 350,
                "column" : 12,
                "source_fragment" : "17: act_bitwise_xor()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x11"
                }
              ],
              "action_entry" : {
                "action_id" : 17,
                "action_data" : []
              },
              "priority" : 18
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 351,
                "column" : 12,
                "source_fragment" : "18: act_bitwise_not()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x12"
                }
              ],
              "action_entry" : {
                "action_id" : 18,
                "action_data" : []
              },
              "priority" : 19
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 352,
                "column" : 12,
                "source_fragment" : "19: act_is_valid()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x13"
                }
              ],
              "action_entry" : {
                "action_id" : 19,
                "action_data" : []
              },
              "priority" : 20
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 353,
                "column" : 12,
                "source_fragment" : "20: act_is_valid_union()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x14"
                }
              ],
              "action_entry" : {
                "action_id" : 20,
                "action_data" : []
              },
              "priority" : 21
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 354,
                "column" : 12,
                "source_fragment" : "21: act_data_to_bool()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x15"
                }
              ],
              "action_entry" : {
                "action_id" : 21,
                "action_data" : []
              },
              "priority" : 22
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 355,
                "column" : 12,
                "source_fragment" : "22: act_bool_to_data()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x16"
                }
              ],
              "action_entry" : {
                "action_id" : 22,
                "action_data" : []
              },
              "priority" : 23
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 356,
                "column" : 12,
                "source_fragment" : "23: act_bool()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x17"
                }
              ],
              "action_entry" : {
                "action_id" : 23,
                "action_data" : []
              },
              "priority" : 24
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 357,
                "column" : 12,
                "source_fragment" : "24: act_two_comp_mod()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x18"
                }
              ],
              "action_entry" : {
                "action_id" : 24,
                "action_data" : []
              },
              "priority" : 25
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 358,
                "column" : 12,
                "source_fragment" : "25: act_sat_cast()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x19"
                }
              ],
              "action_entry" : {
                "action_id" : 25,
                "action_data" : []
              },
              "priority" : 26
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 359,
                "column" : 12,
                "source_fragment" : "26: act_usat_cast()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x1a"
                }
              ],
              "action_entry" : {
                "action_id" : 26,
                "action_data" : []
              },
              "priority" : 27
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 360,
                "column" : 12,
                "source_fragment" : "27: act_ternary()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x1b"
                }
              ],
              "action_entry" : {
                "action_id" : 27,
                "action_data" : []
              },
              "priority" : 28
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 361,
                "column" : 12,
                "source_fragment" : "28: act_deref_header_stack()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x1c"
                }
              ],
              "action_entry" : {
                "action_id" : 28,
                "action_data" : []
              },
              "priority" : 29
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 362,
                "column" : 12,
                "source_fragment" : "29: act_last_stack_index()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x1d"
                }
              ],
              "action_entry" : {
                "action_id" : 29,
                "action_data" : []
              },
              "priority" : 30
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 363,
                "column" : 12,
                "source_fragment" : "30: act_size_stack()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x1e"
                }
              ],
              "action_entry" : {
                "action_id" : 30,
                "action_data" : []
              },
              "priority" : 31
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 364,
                "column" : 12,
                "source_fragment" : "31: act_access_field()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x1f"
                }
              ],
              "action_entry" : {
                "action_id" : 31,
                "action_data" : []
              },
              "priority" : 32
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 365,
                "column" : 12,
                "source_fragment" : "32: act_dereference_union_stack()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x20"
                }
              ],
              "action_entry" : {
                "action_id" : 32,
                "action_data" : []
              },
              "priority" : 33
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 366,
                "column" : 12,
                "source_fragment" : "33: act_access_union_header()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x21"
                }
              ],
              "action_entry" : {
                "action_id" : 33,
                "action_data" : []
              },
              "priority" : 34
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 367,
                "column" : 12,
                "source_fragment" : "34: act_runtime_data(0xaa)"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x22"
                }
              ],
              "action_entry" : {
                "action_id" : 34,
                "action_data" : ["0xaa"]
              },
              "priority" : 35
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 368,
                "column" : 12,
                "source_fragment" : "35: act_value()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x23"
                }
              ],
              "action_entry" : {
                "action_id" : 35,
                "action_data" : []
              },
              "priority" : 36
            },
            {
              "source_info" : {
                "filename" : "expressions.p4",
                "line" : 369,
                "column" : 12,
                "source_fragment" : "36: act_log_msg()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x24"
                }
              ],
              "action_entry" : {
                "action_id" : 36,
                "action_data" : []
              },
              "priority" : 37
            }
          ]
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_2",
          "id" : 0,
          "source_info" : {
            "filename" : "expressions.p4",
            "line" : 374,
            "column" : 12,
            "source_fragment" : "hdr.expr.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["expr", "$valid$"]
              }
            }
          },
          "false_next" : null,
          "true_next" : "MyIngress.operations"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "expressions.p4",
        "line" : 384,
        "column" : 8,
        "source_fragment" : "MyEgress"
      },
      "init_table" : null,
      "tables" : [],
      "action_profiles" : [],
      "conditionals" : []
    }
  ],
  "checksums" : [],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "expressions.p4",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}