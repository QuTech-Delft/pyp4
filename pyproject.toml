[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "pyp4"
authors=[{name = "Wojciech Kozlowski", email = "w.kozlowski@tudelft.nl"}]
maintainers=[{name = "Wojciech Kozlowski", email = "w.kozlowski@tudelft.nl"}]
description = "A library for running P4 pipelines in the BMv2 JSONformat in Python"
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
]
version = "1.0.0"
requires-python = ">=3.8"
dependencies = []

[project.optional-dependencies]
dev = [
    "build",
    "flake8",
    "pylint",
    "pytest",
    "pytest-cov",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
]

[tool.pylint]
load-plugins = [
    "pylint.extensions.no_self_use",
]
disable = [
    "too-few-public-methods",
]
variable-rgx = "^[a-z_][a-z0-9_]{1,30}$"

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    # Warnings we have no control over, because e.g. they come from netsquid.
]

[tool.coverage.run]
omit = [
    "pyp4/trace.py",
]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Exclude defensive programming
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.pyright]
include = [
  "pyp4",
  "tests",
  "examples"
]
exclude = [
  "**/__pycache__"
]

typeCheckingMode = "off"

pythonVersion = "3.8"
pythonPlatform = "Linux"
